{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAUC,SAASC,cAAc,QAEnCC,GADgBF,SAASC,cAAc,UAC7B,MAERE,EAAc,CAClBC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGVP,EAAQQ,iBAAiB,SAAS,SAAAC,GAChC,IAAwBC,EAAAD,EAAME,OAAtBC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MACdT,EAAYQ,GAAQC,C,IAGtBb,EAAQQ,iBAAiB,UAAU,SAAAC,GACjCA,EAAMK,iBAEN,IAAIC,EAAQ,EACZC,YAAW,WACTb,EAAUc,aAAY,WACpB,IAsBiBC,EAAUb,EAtBvBc,EAAQC,OAAOhB,EAAYC,OAASe,OAAOhB,EAAYE,MAAQS,GAsBlDG,EArBHH,EAAQ,EAqBKV,EArBFc,EAsBtB,IAAIE,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgB,CAAEN,WAAUb,SACZoB,KAAKC,SAAW,GAGpCJ,EAAQE,GAERD,EAAOC,E,KA5BJG,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUb,EAAKuB,EAALvB,MACjBwB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAfd,EAAS,QAAYc,OAAN3B,EAAM,M,IAGjD4B,OAAM,SAAAL,G,IAAGV,EAAQU,EAARV,SAAUb,EAAKuB,EAALvB,MAClBwB,EAAA/B,GAASgC,OAAOI,QACd,sBAAuCF,OAAfd,EAAS,QAAYc,OAAN3B,EAAM,M,IAGnDU,GAAS,EACLX,EAAYG,QAAUQ,IACxBoB,cAAchC,GACdH,EAAQoC,Q,GAEThC,EAAYE,K,GACdF,EAAYC,OACfgC,QAAQC,IAAIlC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formUrl = document.querySelector('form');\nconst btnStartUrl = document.querySelector('button');\nlet timerId = null;\n\nconst localObject = {\n  delay: [],\n  step: [],\n  amount: [],\n};\n\nformUrl.addEventListener('input', event => {\n  const { name, value } = event.target;\n  localObject[name] = value;\n});\n\nformUrl.addEventListener('submit', event => {\n  event.preventDefault();\n\n  let count = 0;\n  setTimeout(() => {\n    timerId = setInterval(() => {\n      let steps = Number(localObject.delay) + Number(localObject.step) * count;\n      createPromise(count + 1, steps)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n      count += 1;\n      if (localObject.amount == count) {\n        clearInterval(timerId);\n        formUrl.reset();\n      }\n    }, localObject.step);\n  }, localObject.delay);\n  console.log(localObject);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const objectPromise = { position, delay };\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve(objectPromise);\n    } else {\n      reject(objectPromise);\n    }\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(() => {\n//     Promise.resolve(\n//       console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//     );\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formUrl","document","querySelector","$ce04d3a99e08e73b$var$timerId","$ce04d3a99e08e73b$var$localObject","delay","step","amount","addEventListener","event","_target","target","name","value","preventDefault","count","setTimeout","setInterval","position","steps","Number","Promise","resolve","reject","objectPromise","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","clearInterval","reset","console","log"],"version":3,"file":"03-promises.6f3633f7.js.map"}