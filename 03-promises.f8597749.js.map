{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAUC,SAASC,cAAc,QACnBD,SAASC,cAAc,UAC3C,IAAIC,EAAU,KAEd,MAAMC,EAAc,CAClBC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGVP,EAAQQ,iBAAiB,SAASC,IAChC,MAAMC,KAAEA,EAAIC,MAAEA,GAAUF,EAAMG,OAC9BR,EAAYM,GAAQC,CAAK,IAG3BX,EAAQQ,iBAAiB,UAAUC,IACjCA,EAAMI,iBAEN,IAAIC,EAAQ,EACZC,YAAW,KACTZ,EAAUa,aAAY,KACpB,IAAIC,EAAQC,OAAOd,EAAYC,OAASa,OAAOd,EAAYE,MAAQQ,EAsBzE,IAAuBK,EAAUd,GAAVc,EArBHL,EAAQ,EAqBKT,EArBFY,EAsBtB,IAAIG,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgB,C,SAAEJ,E,MAAUd,GACZmB,KAAKC,SAAW,GAGpCJ,EAAQE,GAERD,EAAOC,EAAc,KA5BlBG,MAAK,EAACP,SAAEA,EAAQd,MAAEA,MACjBsB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBV,QAAiBd,MAAU,IAGnDyB,OAAM,EAACX,SAAEA,EAAQd,MAAEA,MAClBsB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBZ,QAAiBd,MAAU,IAGrDS,GAAS,EACLV,EAAYG,QAAUO,IACxBkB,cAAc7B,GACdH,EAAQiC,Q,GAET7B,EAAYE,KAAK,GACnBF,EAAYC,OACf6B,QAAQC,IAAI/B,EAAY","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formUrl = document.querySelector('form');\nconst btnStartUrl = document.querySelector('button');\nlet timerId = null;\n\nconst localObject = {\n  delay: [],\n  step: [],\n  amount: [],\n};\n\nformUrl.addEventListener('input', event => {\n  const { name, value } = event.target;\n  localObject[name] = value;\n});\n\nformUrl.addEventListener('submit', event => {\n  event.preventDefault();\n\n  let count = 0;\n  setTimeout(() => {\n    timerId = setInterval(() => {\n      let steps = Number(localObject.delay) + Number(localObject.step) * count;\n      createPromise(count + 1, steps)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n      count += 1;\n      if (localObject.amount == count) {\n        clearInterval(timerId);\n        formUrl.reset();\n      }\n    }, localObject.step);\n  }, localObject.delay);\n  console.log(localObject);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const objectPromise = { position, delay };\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve(objectPromise);\n    } else {\n      reject(objectPromise);\n    }\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(() => {\n//     Promise.resolve(\n//       console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//     );\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formUrl","document","querySelector","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$localObject","delay","step","amount","addEventListener","event","name","value","target","preventDefault","count","setTimeout","setInterval","steps","Number","position","Promise","resolve","reject","objectPromise","Math","random","then","$parcel$interopDefault","Notify","success","catch","failure","clearInterval","reset","console","log"],"version":3,"file":"03-promises.f8597749.js.map"}